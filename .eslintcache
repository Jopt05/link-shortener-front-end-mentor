[{"C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\index.js":"1","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\LinkShortenerApp.js":"2","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\components\\Hero.js":"3","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\components\\Shortener.js":"4","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\components\\Boost.js":"5","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\hooks\\useForm.js":"6","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\hooks\\useFetch.js":"7"},{"size":216,"mtime":1609277392184,"results":"8","hashOfConfig":"9"},{"size":323,"mtime":1609303338134,"results":"10","hashOfConfig":"9"},{"size":2232,"mtime":1609699632666,"results":"11","hashOfConfig":"9"},{"size":4884,"mtime":1609699632894,"results":"12","hashOfConfig":"9"},{"size":2324,"mtime":1609699632666,"results":"13","hashOfConfig":"9"},{"size":479,"mtime":1609649897397,"results":"14","hashOfConfig":"9"},{"size":1663,"mtime":1609656071117,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15k7mwh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\index.js",[],["36","37"],"C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\LinkShortenerApp.js",[],"C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\components\\Hero.js",["38","39","40","41","42","43"],"import React, { useState } from 'react'\r\nimport HeroImg from '../assets/illustration-working.svg'\r\nimport Logo from '../assets/logo.svg'\r\n\r\nexport const Hero = () => {\r\n\r\n    const [animstate, setanimstate] = useState({\r\n        menuOpened: false\r\n    })\r\n\r\n    const { menuOpened } = animstate;\r\n\r\n    const handleMenu = () => {\r\n        setanimstate( {menuOpened: !menuOpened} );\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn hero padding\">\r\n            <header className=\"hero__header\">\r\n                <img alt=\"logo\" className=\"hero__header-logo\" src={ Logo } />\r\n                <div className={ `hero__header-nav ${ menuOpened ? '' : 'hidden' }` }>\r\n                    <a href=\"http://puentes.intech5g.com/\" target=\"_blank\" className=\"link\">Features</a>\r\n                    <a href=\"http://puentes.intech5g.com/\" target=\"_blank\" className=\"link\">Pricing</a>\r\n                    <a href=\"http://puentes.intech5g.com/\" target=\"_blank\" className=\"link\">Resources</a>\r\n                    <a href=\"http://puentes.intech5g.com/\" target=\"_blank\" className=\"link login\">Login</a>\r\n                    <a href=\"http://puentes.intech5g.com/\" target=\"_blank\" className=\"button\">Signup</a>\r\n                </div>\r\n                <div onClick={ handleMenu } className={ `hero__header-res-nav ${ menuOpened ? 'opened' : '' }` }>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </header>\r\n            <div className=\"hero__body\">\r\n                <div className=\"hero__body-item\">\r\n                    <h1>More than just shorter links</h1>\r\n                    <p className=\"text\">\r\n                        Build your brand's recognition and get detailed<br/>\r\n                        insights on how your links are performing\r\n                    </p>\r\n                    <a href=\"http://puentes.intech5g.com/\" target=\"_blank\" className=\"button\">Get Started</a>\r\n                </div>\r\n                <div className=\"hero__body-item\">\r\n                    <img alt=\"heroImg\" className=\"hero__body-item-photo\" src={ HeroImg } />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\components\\Shortener.js",["44"],"import React, { useEffect, useRef } from 'react'\r\nimport Img1 from '../assets/icon-brand-recognition.svg'\r\nimport Img2 from '../assets/icon-detailed-records.svg'\r\nimport Img3 from '../assets/icon-fully-customizable.svg'\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nconst initialState = JSON.parse( localStorage.getItem('links') ) || [];\r\n\r\nexport const Shortener = () => {\r\n\r\n    const [link, handleCopy, handleFetch] = useFetch(initialState);\r\n\r\n    const [ formValues, handleInputChange, resetForm ] = useForm({\r\n        shortenerInput: ''\r\n    });\r\n\r\n    const { data, loading, validInput } = link;\r\n\r\n    const { shortenerInput } = formValues;\r\n\r\n    const linksContainer = useRef(null);\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        await handleFetch(shortenerInput);\r\n        resetForm();\r\n        ( validInput === true ) ? linksContainer.current.scrollIntoView(false) : console.log(\"Something went wrong\"); \r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('links', JSON.stringify(data) );\r\n    }, [data])\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn shortener padding\">\r\n            <form onSubmit={ handleSubmit } className={` shortener__form ${ validInput ? '' : 'wrongValue' } `}>\r\n                <input \r\n                    onChange={ handleInputChange }\r\n                    value={ shortenerInput }\r\n                    name=\"shortenerInput\" \r\n                    className=\"shortener__form-input\" \r\n                    type=\"text\" \r\n                    placeholder=\"Shorten a link here...\"\r\n                />\r\n                <label htmlFor=\"shortener\" className=\"shortener__form-label\">Please add a link</label>\r\n                <button type=\"submit\" className=\"button\">\r\n                    { loading ? 'Loading...' : 'Shorten it!' }\r\n                </button>\r\n            </form>\r\n            <div ref={ linksContainer } className=\"shortener__links\">\r\n                {\r\n                    data.map( l => ( \r\n                    <div className=\"animate__animated animate__zoomIn shortener__links-link\" key={ l.id }>\r\n                        <p className=\"shortener__links-link-origin\"> {l.origin} </p>\r\n                        <a target=\"_blank\" href={`https://${l.shorten}`} className=\"shortener__links-link-short\"> {l.shorten} </a>\r\n                        <button onClick={ () => handleCopy( l.id ) } className={ `button ${ l.copied ? 'buttonCopied' : '' }` }>{ l.copied ? 'Copied!' : 'Copy' }</button>\r\n                    </div> ) )\r\n                }\r\n            </div>\r\n            <h2>Advanced Statistics</h2>\r\n            <p className=\"h2Sub\">\r\n                Track how your links are performing across the web with<br/>\r\n                our advanced statistics dashboard.\r\n            </p>\r\n            <div className=\"shortener__statistics\">\r\n                <div className=\"shortener__statistics-item\">\r\n                    <div className=\"shortener__statistics-item-photo\">\r\n                        <img alt=\"statistics icon\" src={ Img1 }/>\r\n                    </div>\r\n                    <p className=\"shortener__statistics-item-title\">Brand Recognition</p>\r\n                    <p className=\"shortener__statistics-item-description\">\r\n                        Boost your brand recognition with each click. Generic links donâ€™t \r\n                        mean a thing. Branded links help instil confidence in your content.\r\n                    </p>\r\n                </div>\r\n                <div className=\"shortener__statistics-item\">\r\n                    <div className=\"shortener__statistics-item-photo\">\r\n                        <img alt=\"statistics icon\" src={ Img2 }/>\r\n                    </div>\r\n                    <p className=\"shortener__statistics-item-title\">Detailed Records</p>\r\n                    <p className=\"shortener__statistics-item-description\">\r\n                        Gain insights into who is clicking your links. Knowing when and where \r\n                        people engage with your content helps inform better decisions.\r\n                    </p>\r\n                </div>\r\n                <div className=\"shortener__statistics-item\">\r\n                    <div className=\"shortener__statistics-item-photo\">\r\n                        <img alt=\"statistics icon\" src={ Img3 }/>\r\n                    </div>\r\n                    <p className=\"shortener__statistics-item-title\">Fully Customizable</p>\r\n                    <p className=\"shortener__statistics-item-description\">\r\n                        Improve brand awareness and content discoverability through customizable \r\n                        links, supercharging audience engagement.\r\n                    </p>\r\n                </div>\r\n                <div className=\"shortener__draw\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\components\\Boost.js",["45","46","47","48","49","50","51","52","53","54"],"import React from 'react'\r\nimport Icon1 from '../assets/icon-facebook.svg'\r\nimport Icon2 from '../assets/icon-twitter.svg'\r\nimport Icon3 from '../assets/icon-pinterest.svg'\r\nimport Icon4 from '../assets/icon-instagram.svg'\r\n\r\n\r\nexport const Boost = () => {\r\n    return (\r\n        <>\r\n            <div className=\"booster padding\">\r\n                <h2>Boost your links today</h2>\r\n                <button className=\"button\">Get Started</button>\r\n            </div>\r\n            <footer className=\"footer padding\">\r\n                <h2>Shortly</h2>\r\n                <div className=\"footer__div\">\r\n                    <div className=\"footer__div-links\">\r\n                        <p className=\"footer__div-links-title\">Features</p>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Link Shortening</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Branded Links</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Analytics</a>\r\n                    </div>\r\n                    <div className=\"footer__div-links\">\r\n                        <p className=\"footer__div-links-title\">Resources</p>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Blog</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Developers</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Support</a>\r\n                    </div>\r\n                    <div className=\"footer__div-links\">\r\n                        <p className=\"footer__div-links-title\">Company</p>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">About</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Our Team</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Careers</a>\r\n                        <a href=\"#\" className=\"footer__div-links-link\">Contact</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer__social\">\r\n                    <img alt=\"social icon\" src={ Icon1 } />\r\n                    <img alt=\"social icon\" src={ Icon2 } />\r\n                    <img alt=\"social icon\" src={ Icon3 } />\r\n                    <img alt=\"social icon\" src={ Icon4 } />\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\hooks\\useForm.js",["55"],"import React, { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = [] ) => {\r\n    \r\n    const [formValues, setformValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setformValues({\r\n            ...formValues,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setformValues(initialState);\r\n    }\r\n\r\n    return [ formValues, handleInputChange, resetForm ];\r\n\r\n}\r\n","C:\\Users\\Jopt\\Desktop\\urlshortener\\src\\hooks\\useFetch.js",["56"],"import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst apiPATH = \"https://api.shrtco.de/v2/shorten?url=\"\r\n\r\nexport const useFetch = ( initialState = [] ) => {\r\n\r\n    const [link, setlink] = useState({\r\n        data: initialState,\r\n        loading: false,\r\n        validInput: true,\r\n    })\r\n\r\n    const handleFetch = async(input) => {\r\n        setlink({...link, validInput:true});\r\n\r\n        if( input.length < 10 ){\r\n            setlink({\r\n                ...link,\r\n                validInput:false\r\n            });\r\n            return;\r\n        }\r\n\r\n        setlink({...link, loading: true})\r\n        const {short_link, original_link} = await fetch( apiPATH + input, {\r\n            method: 'POST'\r\n        })\r\n        .then( respo => respo.json() )\r\n        .then( resp => resp.result )\r\n\r\n        setlink({\r\n            data: [...link.data, {\r\n                id: new Date().getTime(),\r\n                origin: original_link,\r\n                shorten: short_link,\r\n                copied: false,\r\n            }],\r\n            loading: false,\r\n            validInput: true\r\n        })\r\n    }\r\n\r\n    const handleCopy = ( id ) => {\r\n        let x = \"\";\r\n        let links = [...link.data];\r\n        for( let el of link.data ) {\r\n            el.copied = false;\r\n            if( id === el.id ){\r\n                x = link.data.indexOf(el)\r\n                navigator.clipboard.writeText(el.shorten);\r\n            }\r\n        }\r\n        let copiedLink = {...links[x]};\r\n        copiedLink.copied = true;\r\n        links[x] = copiedLink;\r\n        setlink({\r\n            ...link,\r\n            data: links\r\n        })\r\n    }\r\n\r\n    return [link, handleCopy, handleFetch]\r\n}\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":22,"column":60,"nodeType":"63","endLine":22,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":23,"column":60,"nodeType":"63","endLine":23,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":24,"column":60,"nodeType":"63","endLine":24,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":25,"column":60,"nodeType":"63","endLine":25,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":26,"column":60,"nodeType":"63","endLine":26,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":41,"column":60,"nodeType":"63","endLine":41,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":56,"column":28,"nodeType":"63","endLine":56,"endColumn":43},{"ruleId":"64","severity":1,"message":"65","line":20,"column":25,"nodeType":"66","endLine":20,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":21,"column":25,"nodeType":"66","endLine":21,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":22,"column":25,"nodeType":"66","endLine":22,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":26,"column":25,"nodeType":"66","endLine":26,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":27,"column":25,"nodeType":"66","endLine":27,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":28,"column":25,"nodeType":"66","endLine":28,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":32,"column":25,"nodeType":"66","endLine":32,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":33,"column":25,"nodeType":"66","endLine":33,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":34,"column":25,"nodeType":"66","endLine":34,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":35,"column":25,"nodeType":"66","endLine":35,"endColumn":72},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]